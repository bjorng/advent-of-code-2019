defmodule Day10Test do
  use ExUnit.Case
  doctest Day10

  test "test part 1 with examples" do
    assert Day10.part1(example0()) == {8, {3,4}}
    assert Day10.part1(example1()) == {33, {5,8}}
    assert Day10.part1(example2()) == {35, {1,2}}
    assert Day10.part1(example3()) == {41, {6,3}}
    assert Day10.part1(example4()) == {210, {11,13}}
  end

  test "test part 1 with my input" do
    assert Day10.part1(input()) == {269, {13, 17}}
  end

  test "test part 2 with examples" do
    assert Day10.part2(example4(), {11, 13}) == 802
  end

  test "test part 2 with my input" do
    assert Day10.part2(input(), {13, 17}) == 612
  end

  defp example0() do
    [".#..#",
     ".....",
     "#####",
     "....#",
     "...##"]
  end

  defp example1() do
    ["......#.#.",
     "#..#.#....",
     "..#######.",
     ".#.#.###..",
     ".#..#.....",
     "..#....#.#",
     "#..#....#.",
     ".##.#..###",
     "##...#..#.",
     ".#....####"]
  end

  defp example2() do
    ["#.#...#.#.",
     ".###....#.",
     ".#....#...",
     "##.#.#.#.#",
     "....#.#.#.",
     ".##..###.#",
     "..#...##..",
     "..##....##",
     "......#...",
     ".####.###."]
  end

  defp example3() do
    [".#..#..###",
     "####.###.#",
     "....###.#.",
     "..###.##.#",
     "##.##.#.#.",
     "....###..#",
     "..#.#..#.#",
     "#..#.#.###",
     ".##...##.#",
     ".....#.#.."]
  end

  defp example4() do
    [".#..##.###...#######",
     "##.############..##.",
     ".#.######.########.#",
     ".###.#######.####.#.",
     "#####.##.#.##.###.##",
     "..#####..#.#########",
     "####################",
     "#.####....###.#.#.##",
     "##.#################",
     "#####.##.###..####..",
     "..######..##.#######",
     "####.##.####...##..#",
     ".#####..#.######.###",
     "##...#.##########...",
     "#.##########.#######",
     ".####.#.###.###.#.##",
     "....##.##.###..#####",
     ".#.#.###########.###",
     "#.#.#.#####.####.###",
     "###.##.####.##.#..##"]
  end

  defp input do
    File.read!('input.txt')
    |> String.trim
    |> String.split("\n")
  end
end
